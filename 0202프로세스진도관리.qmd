---
title: "프로세스 진도관리"
format: html
descripton: 생산운영과 공장관리에 있어 프로세스 진도관리에 대해 알아 본다.
keywords: 진도관리, 네트워크 기법, 주경로, AOA, AON, PERT, CPM, CCM
---

::: {.callout-tip icon=false title="기출: 97-1-7"}
:::

## 진도관리

**공정진도관리**는 <font color = "blue">생산 공정에서 각 작업이 계획된 일정에 따라 원활하게 진행되도록 관리하는 활동</font>을 의미한다. 이는 생산 일정의 지연을 방지하고, 원활한 자원 배분을 통해 **납기 준수**와 **생산 효율성 향상**을 목표로 한다.

공정진도관리의 목적
: 
	1. **납기 준수**  
	   고객과 약속한 **납기 기한을 지키기 위해 생산 일정**을 효과적으로 관리한다.
	2. **생산 흐름의 최적화**  
	   병목현상을 방지하고 **생산 공정 간 균형을 맞춰** 효율적인 생산이 이루어지도록 한다.
	3. **재고 및 비용 절감**  
	   불필요한 재고 증가를 방지하고, 적절한 시점에 원자재를 투입하여 **재고 비용과 운영 비용을 절감**한다.
	4. **자원 활용 극대화**  
       인력, 기계, 자재 등의 자원을 효율적으로 배분하여 **생산성 향상을 도모**한다.

공정진도관리 방법에는 **일정계획법**, **MRP**, **TOC 기반 관리**, **진도 통제**, 그리고 **JIT 생산방식** 등이 있다.

 | 방법 | 설명 |
|------|------|
| **일정계획법**<br>(Scheduling Method) | 공정별로 시작 및 완료 일정을 계획하고 이를 준수하도록 관리하는 방식 (예: 간트 차트, 네트워크 기법) |
| @sec-mrp | 생산에 필요한 자재의 투입 시점을 최적화하여 일정에 맞춰 생산이 진행되도록 조정 |
| @sec-toc(제약이론) 기반 관리 | 병목공정을 중심으로 전체 생산 일정을 조정하여 납기를 맞추는 기법 |
| **진도통제**<br>(Progress Control) | 작업의 실제 진행 상황을 모니터링하고 지연이 발생할 경우 즉각적인 조치를 취함 |
| @sec-jit 방식 | 필요할 때 필요한 만큼 생산하여 불필요한 재고를 최소화하고 공정 흐름을 최적화 |
: 공정진도관리 방법 {tbl-colwidths="[25,75]"}

공정진도관리 도구
: 
	1. **간트 차트(Gantt Chart)**  
	: 작업 일정과 진행 상황을 한눈에 볼 수 있도록 시각적으로 표현한 도구이다.  
	   
	2. @sec-pert / @sec-cpm (네트워크 기법)  
	: 공정 간 상호 관계를 고려하여 일정 계획을 최적화하는 기법이다.  
	
	3. @sec-erp 시스템  
	: 기업 내 모든 자원을 통합적으로 관리하여 실시간으로 공정 진행을 모니터링한다.  

공정진도관리의 효과
: 
	- 납기 준수를 통한 **고객 신뢰도 향상**
	- 생산 지연 최소화를 통한 **원가 절감**
	- 자원의 최적 배분으로 **생산 효율성 증가**
	- 실시간 모니터링으로 **문제 발생 시 신속한 대응 가능**

::: {.callout-tip icon=false title="기출: 97-3-6, 100-3-1, 103-4-4, 115-1-5, 130-4-6"}
:::

## 네트워크 기법

**네트워크 기법**(Network, 화살도 arrow diagram, 활동 네트워크 activity network diagram)은 <font color = "blue">필요한 활동 선후관계를 네트워크로 표시하는 방식</font>으로 간트차트 결점을 보완하기 위하여 개발되었다. 대표적인 기법으로 [@sec-pert] (Program Evaluation & Review Technique)와 [@sec-cpm] (Critical Path Method)이 있다.

:::{.callout-tip icon=false title="기출: 118-4-6"}
:::

### 주경로 {#sec-critical-path}

네트워크 기법에서 **주경로**(critical path)는 다음과 같이 정의한다.

```{mermaid}
  flowchart LR
  
  A --> B 
  A ==> C 
  B --> D
  C ==> D ==> E ==> H
  C --> F --> H
```

-   <font color = "blue">여유시간 값이 최소가 되는 단계를 연결한 경로</font>
-   최소 여유 단계에서 활동이 계획 일정보다 늦어지면 최종 단계에서 프로젝트 완성이 그만큰 지연되므로 <font color = "red">주경로 상의 공정을 **애로공정**이라고 함</font>
-   네트워크상 주공정은 굵은 색으로 표시하여 중점 관리 함

주공정 계산 방법
: 
	1. 작업 나열 및 의존 관계 정의
	2. 작업 소요 시간 추정
	3. 네트워크 다이어그램 작성
	4. 전진계산(Forward pass) - 가장 빠른 완료 시간(Early Times, ES)
	5. 후진계산(Backward pass) - 가장 늦은 완료 시간(Late Times, LS)
	6. 여유 시간(부동소요, LS - ES) 계산
	7. 크리티컬 패스 도출

:::{.callout-important icon=false title="주경로 계산"}
아래 그림에서 주 공정(Critical Path) 및 총소요일을 구하시오. (단, 그림의 Path 위의 숫자는 해당 공정의 소요일이다.)

![](images/118-4-6-01.png)

----

![](images/118-4-6-02.png)

각 공정 여유시간은 다음과 같다.

공정|0|1|2|3|4|5|6|7|8
-|-|-|-|-|-|-|-|-|-
여유시간|0|0|2|0|0|1|12|0|0

따라서 주공정은 여유시간이 최소가 되는 경로인 ⓪ → ① → ③ → ④ → ⑦ → ⑧이며, 총소요일은 20일이다.
:::

:::{.callout-tip icon=false title="기출: 124-3-2"}
:::

### 네트워크 구성

네트워크 기법은 네트워크 작성 방법에 따라 [@sec-aoa]와 [@sec-aon] 방식으로 나뉜다.

```{mermaid}
  flowchart TB
  subgraph AOA
    1((1)) -- A --> 3((3))
    2((2)) -- B --> 3((3)) -- C  --> 4((4))
  end
  
  subgraph AON
    A((A)) & B((B)) --> C((C))
  end
```

단계(Event), 마디(Node)

:   
	-   작업 활동을 수행함에 있어 활동 개시 또는 완료되는 시점을 나타냄
    -   활동 개시 시점을 착수단계(beginning event), 활동 완료 시점을 완료 단계(ending event)라고 함

활동(Activity)

:   
	-   과업 수행 상 시간 및 자원(인력, 물자, 설비 등)이 소비되는 작업
    -   PERT 상 활동은 활동방향에 따라 실선 화살표로 표시
    -   활동에 따라 단계가 분리되거나 연결되기도 하는데 분리되는 경우 분리단계(burst event), 연결되는 경우 병합단계(merge event)라 함

결합점(Node)

:   
	-   네크워크에서 마디(○)를 나타내는 것으로 AOA 방식에서는 단계(event)를 나타내며 AON 방식에서는 마디로 작업이나 활동을 나타냄

호(Arc)

:   
	-   네트워크에서 가지(→)로 활동을 나타내는 것으로 AOA 방식에서는 활동을, AON 방식에서는 활동 선후관계(단계)를 나타냄

#### AOA 네트워크 {#sec-aoa}

**AOA**(activity on arrow/arc)는 <font color="#245bdb">프로젝트에 필요한 활동을 화살표(arrow 또는 arc)로 표시하고 착수 완료 시점을 마디(node)로 표현</font>하는 방법이다.

```{mermaid}
flowchart LR

1((시작)) -- "활동A<br>11" --> 2((1)) -- "활동B<br>13" -->  3((2)) --"..."--> 9((완료))

```

활동이 시작되는 시점이나 완료되는 시점을 단계(event)로 정의하고 이를 원(○)으로 된 마디로 표시한다. 화살표와 마디를 활동 간 선행 관계에 따라 연결함으로써 프로젝트를 네트워크로 나타낸다. 활동을 화살표 위에 나타내고 활동 시작과 완료를 마디로 표시하여 활동 선행 관계를 `마디 → 화살표 → 마디` 형태로 연결하여 표현한다. 단계를 나타내는 마디에서는 시간과 비용이 소요되지 않고 <font color = "blue">화살표 선상에 활동명과 활동 소요시간을 표시</font>한다.

AOA 기법은 활동 간 연결점을 중시하므로 **사상 지향적**이라고 하고 선후 관계는 모든 선행활동이 완료되기 전까지는 사상이 일어날 수 없음을 뜻한다. 일반적으로 사상 번호는 좌측에서 우측으로 관행적으로 나열한다. 참고로, 사상은 활동이 하나 이상 완료되고 다른 활동이 시작되는 점을 뜻한다.

AOA 작성 시 원칙

:   
	-   마디 사이는 오직 화살표 하나만 연결
    -   공정 순서는 화살표 방향, 화살표 길이는 소요시간과 무관
    -   편의상 마디에 번호를 부여하되 중복 표시하지 않음
    -   첫마디 하나에서 시작하여 끝마디 하나에서 완료
    -   부득이 가상 활동(dummy activity) 표기 시 소요시간은 0, 화살표는 점선을 사용

주 공정 파악 절차

: 
	1.  활동 수행 소요 시간과 선행 관계를 고려하여 네트워크 구성
    2.  각 단계 시작 시간과 종료시간 계산
        -   단계 시작시간, SE - 다음 활동이 가장 빨리 시작될 수 있는 시간
        -   프로젝트 첫(시작) 단계: SE = 0
        -   두 번째 이후 단계: SE = max(직전 단계 SE, 직전 활동 시간)
        -   종료 단계: FL = SE, FL은 단계 종료 시간이며 프로젝트 최단 완료 시간을 지연시키지 않으면서 다음 활동을가장 늦게 완료할 수 있는 시간, 즉 다음 단계 SE 값 중 최소값
    3.  각 단계 여유시간 계산
        -   SL(a) = FL(a) - SE(a)
        -   SL은 여유시간, FL은 가장 늦은 완료 시간, SE는 가장 빠른 시작 시간
    4.  프로젝트 최단 완료 시간과 주공정 계산


:::{.callout-important icon=false title="주공정 계산"}
| **활동** | **내용**               | **기대시간(일)** | **선행활동**    |
|--------|--------------------|----------------|---------------|
| A      | 제품전략 결정          | 1              | -             |
| B      | 입지선정               | 7              | -             |
| C      | 제조설비선정           | 3              | A             |
| D      | 배치결정               | 4              | C             |
| E      | 전기, 수도시설 설치     | 11             | C             |
| F      | 직원 모집              | 4              | B, C          |
| G      | 설비 설치              | 5              | D             |
| H      | 사무동 등 인테리어 공사  | 2              | E, F          |
| I      | 정보시스템 설치         | 4              | E, G          |
| J      | 종업원 교육            | 2              | H, I          |

```{mermaid}
flowchart LR

0[시작] =="A<br>1"==> 1((1)) 
1 =="C<br>3"==> 3((3)) 
3--"D<br>4"-->4((4))
0[시작]--"B<br>7"--> 2((2))
3 =="E<br>11"==> 5((5))
3 -.-> 2
2 --"F<br>4"-->6((6))
4 --"G<br>5"--> 7((7))
5 --"H<br>2" --> 8((8))
6 -.-> 5
7 -.-> 5
5 =="I<br>4"==> 9((9))
9 =="J<br>2"==>10(완료)
8 -.-> 9
```

단순열거법에 따라 주공정은 `A-C-E-I-J`이고, 기대완료시간은 21일(1+3+11+4+2)이다.
:::

::: {.callout-note icon=false title="프로젝트 관리 목표"}
최적화를 위한 프로젝트 관리 목표로 제시되는 3가지 요소는 다음과 같다.

범위(scope)

:   -   프로젝트 결과물의 품질, 세부사항, 규모 측면에서 본 프로젝트 크기이다.

비용(cost)

:   -   프로젝트를 위해 지출되는 금액 뿐만아니라 프로젝트 완료에 필요한 각종 도구, 장비, 지원 등이 포함된다.

시간(time)

:   -   다른 요소와 균형을 맞춰 계획 단계 단축, 일정 조정, 마감일 연장 등이 필요하다.
:::

#### AON 네트워크 {#sec-aon}

**AON**(activity on node)는 <font color = "blue">활동을 마디로 표시하고 가지(화살표)는 활동 선후관계</font>를 나타낸다. 이 기법은 **활동 지향적**이다.

네트워크 구성 절차는 다음과 같다.

1.  프로젝트 수행에 필요한 모든 활동을 세로로 나열한다(먼저 착수해야 할 선행 작업부터 나열).
2.  나열된 각 활동 오른쪽에 직전 선행활동을 기록한다.
3.  화살표와 마디를 이용하여 네트워크도를 작성한다.
4.  필요하다면 주경로, 완료 일자를 추정한다.

<br>

:::{.callout-important icon=false title="기출: 100-3-1"}

```{mermaid}
flowchart LR
1([1])
2([2])
3([3])
4([4])
5([5])
6([6])

1 --3,4,5--> 2
2 --4,5,6-->3
1 --4,6,8-->3
2 --5,7,9-->4
4 --d1-->5
3 --3,6,9-->5
4 --7,8,15-->6
5 --6,8,16-->6
```

위 AON을 표로 정리하면 다음과 같다.

주어진 데이터를 기반으로 **기대시간**과 **분산**이 포함된 표를 작성하면 다음과 같다.

 | **선행단계** | **후행단계** | **낙관치(a)** | **정상치(m)** | **비관치(b)** | **기대시간** | **분산**  |
|------------|------------|-------------|-------------|-------------|-------------|------------|
| 1          | 2          | 3           | 4           | 5           | 4           | 0.11          |
| 1          | 3          | 4           | 6           | 8           | 6           | 0.44       |
| 2          | 3          | 4           | 5           | 6           | 5           | 0.11       |
| 2          | 4          | 5           | 7           | 9           | 7           | 0.44       |
| 3          | 5          | 3           | 6           | 9           | 6           | 1.00       |
| 4          | 6          | 7           | 8           | 15          | 9           | 1.78       |
| 5          | 6          | 6           | 8           | 16          | 9           | 2.78       |

$$
기대시간(t_e) = \frac{a + 4m + b}{6},  \quad 분산(\sigma^2) = (\frac{b-a}{6})^2
$$

단순열거법으로 주경로를 찾게되면 1 - 2 - 3 - 5 - 6이고 기대완료 시간은 24(4+5+6+9)일이다.

프로젝트를 24일만에 끝낼 확률을 구하기 위해서는 정규분포 z 값을 계산한다.

$$
z = \frac{TS-TE}{\sqrt{(\sum{(\sigma^2)}}} = \frac{24-24}{\sqrt{\sum{(0.11+0.11+1.00+2.78)}}} = 0
$$

따라서 z = 0 값을 표준정규분포에서 찾아보면 0.5를 값는다. 그러므로 해당 프로젝트를 24일만에 끝낼 확룰은 50%이다.
:::

::: {.callout-important icon=false title="라인 편성 효율"}
S제품을 조립 생산하는 K공장은 공정효율을 최적화하는 라인을 구축하여 수요에 대응하고자 한다. 이 제품은 다음 표와 같이 10개의 단위작업을 거쳐 1일 320개가 조립생산된다. 일일근무시간이 9시간이며, 오전 오후 10분씩 휴식시간과 40분의 점심시간이 주어질 때 다음 물음에 답하시오.

작업명 | 선행작업명 | 작업소요시간(분)
-|-|-
A | \- | 1.3
B | A | 0.5 
C | A | 1.2
D | B | 0.6
E | C,D | 0.3
F | A | 0.8
G | E | 1.3
H | F,G | 0.6
I | H | 0.8
J | I | 0.4

AON 방식을 사용하여 선후관계도를 작성하시오.

```{mermaid}
flowchart LR

A([A<br>1.3])
B([B<br>0.5])
C([C<br>1.2])
D([D<br>0.6])
E([E<br>0.3])
F([F<br>0.8])
G([G<br>1.3])
H([H<br>0.6])
I([I<br>0.8])
J([J<br>0.4])

A --> B
A ---> C
B --> D
C & D --> E
A ----> F
E --> G
F --> H
G --> H
H --> I
I --> J
```

----

생산목표를 달성하기 위한 최소공정수를 구하시오.

$$
사이클타임 = \frac{1일가용시간}{1일목표생산량} = \frac{9(시간) \times 60(분) - (20+40)(분)}{320(개)} = 1.5(분)
$$

목표 생산량을 달성하기 위해서는 공정당 1.5분 이내 완료되어야 한다. 따라서 총 과업시간을 사이클 타임으로 나누어 최소공정수를 계산한다.

$$
최소공정수 = \frac{과업시간합계}{사이클타임} = \frac{7.8}{1.5} = 5.6
$$

최소공정수는 6개이다.

----

최적할당을 수행하시오.

```{mermaid}
flowchart LR

A([A<br>1.3])
B([B<br>0.5])
C([C<br>1.2])
D([D<br>0.6])
E([E<br>0.3])
F([F<br>0.8])
G([G<br>1.3])
H([H<br>0.6])
I([I<br>0.8])
J([J<br>0.4])

subgraph 01
A
end
subgraph 02
B
D
end
subgraph 03
C
E
end
subgraph 04
G
end
subgraph 05
F
H
end
subgraph 06
I
J
end

A --> B
A ---> C
B --> D
C & D --> E
A ----> F
E --> G
F --> H
G --> H
H --> I
I --> J
```

----

라인편성효율(Line of balance efficiency)을 구하시오.

$$
\text{라인 밸런싱 효율(E)} = \frac{총과업시간}{최소공정수 \times 사이클타임} \times 100\% = \frac{7.8(분)}{6(개) \times 1.5분} \times 100\% = 86.7\%
$$

:::

:::{.callout-important icon=false title="네트워크 작성"}

| 활동 | 선행활동 | 소요시간(일) |
|------|----------|-------------|
| A    | -        | 3           |
| B    | A        | 6           |
| C    | B        | 12          |
| D    | C        | 2           |
| E    | -        | 6           |
| F    | E        | 10          |
| G    | F        | 5           |
| H    | D, G     | 1           |

----

**AOA**

```{mermaid}
graph LR
    1((시작)) ==>|"A (3일)"| 2((A 완료))
    2 ==>|"B (6일)"| 3((B 완료))
    3 ==>|"C (12일)"| 4((C 완료))
    4 ==>|"D (2일)"| 5((D 완료))
    
    1 -->|"E (6일)"| 6((E 완료))
    6 -->|"F (10일)"| 7((F 완료))
    7 -->|"G (5일)"| 8((G 완료))
    
    5 ==>|"H (1일)"| 9((종료))
    8 -->|"H (1일)"| 9

```

**AON**

```{mermaid}
graph LR
    A["A (3일)"] ==> B["B (6일)"]
    B ==> C["C (12일)"]
    C ==> D["D (2일)"]
    
    E["E (6일)"] --> F["F (10일)"]
    F --> G["G (5일)"]
    
    D ==> H["H (1일)"]
    G --> H
```

총완료시간은 A(3) → B(6) → C(12) → D(2) → H(1) = 24(일)이다.
:::


### 주요 기법

진도관리를 위한 네트워크 주요 기법은 PERT, CPM, CCPM 등이 있다. 


#### PERT {#sec-pert}

**PERT**(program evaluation and review technique, 프로그램 평가 검토 기법)은 <font color = "#0000CD">1958년 미국 해군에서 Polaris missile 프로젝트 일정 계획 및 통제를 위한 관리 기법</font>으로 개발되었으며, <font color = "#0000CD">시간을 가장 중요한 요소로 통제</font>하는 프로젝트 관리 방법이다. 연구 개발 프로세스에서 프로젝트 진행 상황을 통계 방법을 활용하여 파악하고 이를 통해 일정 계획 및 통제 수단으로 활용되었다. <font color = "#0000CD">과거 경험이 없는 불확실한 대상</font>이나 여러 가지 유형의 프로그램 연구 개발에 적합하다.

장점|단점
-|-
<font color = "#0000CD">프로젝트 완료 시간을 예측</font>하고 전체 프로세스를 관리할 수 있다.                                                      | <font color = "red">주관적인 판단에 의해 결정된 활동 예상 시간</font>을 바탕으로 프로젝트 완료 예상 시점 혹은 기간을 결정하기 때문에 판단자의 주관적인 요소에 따라 예측 결과가 달라질 수 있다. 
확률적으로 계산한 것이기 때문에 <font color = "#0000CD">예측한 시간에 비해 더 빨리 프로젝트를 완료</font>할 수도 있다.                          | 활동 소요 시간이 적절하게 예측되었더라도 PERT에서는 소요 시간을 확률적으로 고려하게 된다. 실제 확률분포와 베타분포의 상관관계가 낮을수록 <font color = "red">예측한 결과와 실제 소요 시간 오차는 커질 수</font> 있다. 
주공정이 아니면서 여유시간이 있는 활동을 완료한 이후 <font color = "#0000CD">잉여 시간이나 자원을 주공정에 투입함</font>으로써 프로젝트 완료 기간을 단축시킬 수 있다. | 다른 프로젝트 경로에 있는 활동이 연기될 경우 주공정 자체가 변할 수 있으며, 이로 인해 PERT에서 <font color = "red">예측한 소요 시간은 실제 예측 시간보다 더 짧아진다</font>는 단점이 있다.


**네트워크 구성 절차**는 다음과 같다. 

```{mermaid}
graph TD
    classDef uniformStyle fill:#E3F2FD,stroke:#90CAF9,stroke-width:2px,font-size:14px

    A[프로젝트 수행 시 <br>필수적인 과정과 활동 선정]:::uniformStyle --> 
    B[각각 관리점과 활동 순서를 결정]:::uniformStyle --> 
    C[결정된 순서를 고려하여 <br>네트워크 개략도 작성]:::uniformStyle --> 
    D[각 과정에 소요되는 시간 예측]:::uniformStyle --> 
    E["소요시간 정보를 고려하여 <br>주공정(critical path) 결정"]:::uniformStyle --> 
    F[프로젝트 진행에 따라 <br>PERT Chart 업데이트]:::uniformStyle
```


1. **프로젝트 수행 시 필수적인 과정과 활동 선정**  
  활동은 프로젝트를 완수하는데 필요한 업무이고 주요 관리점은 활동 시작과 끝 지점으로 정의된다.

2. **각각 관리점과 활동 순서를 결정**  
  활동과 관리점 순서를 결정한다.

3. **결정된 순서를 고려하여 네트워크 개략도 작성**  
  활동을 정해진 순서에 따라 수직적, 병렬적으로 배치하여 활동 간 연관성과 순서를 나타내는 망 조직 선도(network diagram, AOA 또는 AON) 작성한다.

4. **각 과정에 소요되는 시간 예측**  
  시간적 불확실성을 감소시키기 위해 세 종류 시간을 정의하고 이를 통해 예상 시간을 계산한다.  
    - 낙관적 시간, optimistic time(a), 활동을 완료할 수 있는 최소 예상시간
    - 평균 시간, most likely time(b), 가장 높은 확률을 갖는 활동 완료 시간
    - 비관적 시간, pessimistic time(c), 활동을 완료하는데 소요되 수 있는 최장 시간
    - 낙관적 시간과 비관적 시간은 평균 시간에서 $\pm3\sigma$만큼 떨어진 위치로 설정
    - 위 3가지 시간을 활용하여 평균 소요 시간($T_E$) 및 분산산을 확률적으로 예측(베타 분포를 따른다고 가정)  
      $$T_E = mean \ value \ = \frac{a + 4b + c}{6}, \quad \sigma^2=(\frac{c-a}{6})^2$$ {#eq-pert-te}

5. **소요시간 정보를 고려하여 주공정(critical path) 결정**  
  위 단계에서 예측한 예상소요시간을 고려하여 프로젝트를 가장 짧은 시간에 완료할 수 있는 주공정을 결정한다.  
    -   주공정은 각 활동에 소요되는 시간을 연속적으로 더해 프로젝트를 진행하는데 있어 가장 긴 경로로 결정
    -   주공정이 명확하지 않을 경우 다음 네가지 요소를 추가적으로 고려
        -   Earliest Start Time(ES), 선행 활동이 먼저 완수되었을 때 해당 활동을시작할 수 있는 가장 빠른 시점
        -   Earliest Finish Time(EF), 가장 빨리 해당 활동을 완수할 수 있는 시점으로 `ES + 활동 소요 시간`으로 계산
        -   Latest Start Time(LS), 프로젝트 전체 완수 시간에 영향은 없지만 선행 활동에서 여유시간이 발생하지 않음에 따라 해당 활동을 시작할수 있는 가장 늦은 시점
        -   Latest Finish Time(LF), 가장 늦게 해당 확동을 완수할 수 있는 시점으로 `LS + 활동 소요 시간`으로 계산

6. **프로젝트 진행에 따라 PERT Chart 업데이트**  
  주 공정이 결정되면 프로젝트 완료 일자가 결정되고 실제 프로젝트를 진행한다.  
    -   예상 소요 시간을 실제 소요 시간으로 업데이트하고 추가적으로 요구되는 활용 혹은 제외 가능한 활동 등을 고려하여 PERT Chart를 새로운 상황에 맞게 지속적으로 업데이트 수행

:::{#nte-pert-cost .callout-note icon=false title="PERT/COST"}

PERT/COST는 <font color = "blue">프로젝트가 최소비용으로 완료될 수 있도록 일정 계획을 수립하는 기법</font>이다.

프로젝트 비용은 직접 비용과 간접 비용으로 구성된다. 직접 비용은 각 활동 완료에 소요되는 비용을 뜻하며, 간접 비용은 프로젝트 완료 시간이 길어짐에 따라 증가하는 비용을 뜻한다. 예를 들면 이자, 설비 사용료, 보험료와 같은 간접 경비가 이에 속한다.

일반적으로 프로젝트 기간이 길어지면 직접 비용 감소하지만 간접비용은 증가하게 된다. 반대로 프로젝트 일정을 단축하게 되면 그 만큼 직접 비용이 발생하게 된다.

분석 절차는 다음과 같다.

1.  전체 프로젝트를 단계 별로 분리한 작업분해도(WBS) 작성
2.  기능적으로 독립된 Work Package 단위가지 세분화
3.  Work Package가 포함된 각 활동을 토대로 PERT 계획공정도 작성
4.  각 공정 추정 시간치($t_e$)와 단계 시간($T_e, \ TL, \ S$)을 구하여 프로젝트 일정 계획을 수립
5.  각 활동 일정 계획이 수립되면 비용 견적과 예산화(budgeting) 수행
:::


#### CPM {#sec-cpm}

**CPM**(critical path method)은 프로젝트에 있어 각 활동 시작과 종료 시점을 나타내는 방법으로 <font color = "blue">프로젝트를 완수하는데 필요한 활동과 각 활동 완수 시 소요되는 시간을 모두 알고 있는 상태에서 진행 순서를 최적으로 도출해 내는 관리 기법</font>이다.

1957년 미국 Remington-Rand 사 J.E. Kelly와 Du Pont 사 M.R. Walker에 의해 개발된 기법으로 Dupont 사에서 화공 플랜트 장비를 위해 가동 중단 시간과 정비, 정비 후 재가동 시간을 효율적으로 관리하기 위해 개발한 프로젝트 관리 기법이다. [@sec-pert]가 주로 불확실성 하에서 프로젝트를 관리하는 기법인데 반해 CPM은 과거 경험했던 공법, 기술, 또는 상업적 프로젝트에 응용되는 계획 관리기술이다.

CPM 장단점은 다음과 같다.

장점|단점
-+-
프로젝트 진행상황을 <font color = "blue">시각적으로 표현</font>할 수 있으며 프로젝트를 완수하는데 <font color = "blue">필요한 시간을 비교적 정확하게 예측</font>할 수 있다. 또한 어떤 활동이 프로젝트 진행 일정 및 다른 활동 완수에 영향을 미치는지 분석이 가능하다. | 기법은 복잡하지만 변화 가능성이 적은 프로젝트를 수행할 때 프로젝트 완수 시간 불확실성을 해소하기 위해 개발되었기 때문에 <font color = "red">프로젝트 수행 방법이나 과정이 달라지기 쉬운 경우에는 CPM 기법을 통한 예측 활용성은 제한적</font>일 수 밖에 없다.

진행 순서
: 
1.  개별 활동 명시
2.  각 활동 순서 결정
3.  결정된 순서를 고려하여 네트워크 개략도 작성
4.  각 과정에 소요되는 시간 예측
5.  소요 시간 정보를 고려하여 주공정(critical path) 결정  
        -   활동 네트워크 상 가장 오래 걸리는 공정 경로
6.  프로젝트 진행에 따라 CPM diagram 업데이트


:::{.callout-important icon=false title="네트워크 기법"}

 | 활동 | 선행 활동      | 후행 활동      | 정상 시간 | 정상 비용 | 단축 시간 | 단축 시간 감안 총비용 |
|------|---------------|---------------|-----------|-----------|------------|----------------------|
| A    | -             | B, C          | 4일       | 500만원   | 2일       | 1000만원            |
| B    | A             | C, D          | 3일       | 600만원   | 2일       | 800만원             |
| C    | A, B          | D, E          | 5일       | 700만원   | 3일       | 1400만원            |
| D    | B, C          | E             | 2일       | 300만원   | 1일       | 600만원             |
| E    | D             | -             | 1일       | 300만원   | -          | -                   |

----

네트워크는 다음과 같이 작성할 수 있다.

```{mermaid}
graph LR
    A(("A (4일)")) --> B(("B (3일)"))
    A ---> C(("C (5일)"))
    B ---> C
    C --> D
    B --> D(("D (2일)"))
    C --> E(("E (1일)"))
    D --> E
```

정상 완료 시간 기준으로 비용을 계산하면 다음과 같다.


정상 완료 시간: 4일
: - Critical Path: A → B → C → D → E

정상 비용: 2400만 원
: - 500 + 600 + 700 + 300 + 300

프로젝트 완료 시간을 1일 단축할 경우 계산하면 다음과 같다.

프로젝트 완료 시간을 단축하려면 **Critical Path(A → B → C → D → E)** 상의 활동 중에서 **단축 가능한 활동**을 선택해야 한다. 각 활동의 단축 가능 시간과 비용은 아래와 같다.

 | 활동 | 단축 시간 | 단축 시간 감안 총비용 | 단축 비용 증가분 (1일당) |
|------|-----------|----------------------|--------------------------|
| A    | 2일       | 1000만원            | (1000 - 500) / (4-2) = 250만원 |
| B    | 2일       | 800만원             | (800 - 600) / (3-2) = 200만원 |
| C    | 3일       | 1400만원            | (1400 - 700) / (5-3) = 3503만원 |
| D    | 1일       | 600만원             | (600 - 300) / 1 = 300만원 |

**단축 전략**
: - **B 활동 단축**: 단축 비용 증가분이 가장 낮은 B 활동을 1일 단축한다.

**결과 계산**
: 
1. **총 프로젝트 소요 시간**  
   기존 완료 시간 15일 → 단축 후 14일
2. **총 프로젝트 비용**  
   기존 비용 2400만 원 + B 활동 단축 비용 200만 원 = 2600만원

**결과**
: 
- **총 프로젝트 소요 시간**: 14일  
- **총 프로젝트 비용**: 2600만 원  
:::

:::{.callout-tip icon=false title="기출: 115-1-3"}
:::

#### CCM {#sec-ccm}

**CCM**(critical chain method) 또는 CCPM (critical chain project management)은 <font color = "blue">TOC 제약 이론을 기반</font>으로 한 프로젝트 관리 기법이다.

제품 Life cycle이 날로 짧아지고 고객 요구가 다양해 짐에 따라 신제품 개발, 신규 사업 추진 등 급변하는 사업 환경에 대응하기 위해서 프로젝트성 업무가 급증하는 추세이다. 프로젝트는 과제 특성상 <font color = "red">완료 시간이 불확실하여 계획 단계에서 준수 확룔을 높이기 위해 안전 여유를 감안하여 예상 소요 시간을 길게 수립</font>한다. 프로제특 관리자는 제한된 자원, 즉 인력, 비용, 시간 등으로 여러 프로젝트를 동시에 관리하여 프로젝트를 기한 내 원활히 수행하기 위한 효과적인 관리기법이 필요하게 되었다.

::: {.callout-note icon="false" title="예상 기간 장기화 문제 원인"}

**안전여유**
: - 납기를 어기지 않기 위해 실제 예상 일정보다 여유 시간을 추가하여 계획 수립

**자기방어**
: - 작업을 일찍 완료하게 되면 다른 작업을 할당 받게 되어 작업 완료를 숨기는 현상

**학생증후군**
: - 과제 또는 시험 기간이 충분하더라도 마감 시간에 맞춰 시작하려는 현상

**파킨슨 법칙**
: - 과제가 일찍 완료될 수 있더라도 마감일자까지 과제를 진행함

**Multi-tasking**
: - 여러 작업을 동시에 진행하는 상황에서 단일 작업을 순차적으로 진행하는 것보다 시간 소요가 더 많이 발생하는 경우

**후행공정**
: - 후속 작업이 준비되어 있지 않으면 준비 일정 단축이 어려움

**자원병목**
: - 희소 자원 가용성 문제로 일정 지연 발생 가능
:::

CCM 목표는 <font color = "blue">프로젝트 기간 단축과 예상 기간 준수</font>이다. 작업 기반 버퍼로 네트워크 경로 상 개별 활동 일정을 미시적으로 관리하는 대신 모든 작업 체인에 따라 자원 가용성 및 종속성을 고려하고 보호하기 위해 <font color = "blue">체인에 있는 전반적인 모든 활동 버퍼를 관리</font>하는데 중점을 둔다. <font color = "blue">암시적인 개별 작업 버퍼를 제거</font>하고 일정 위험을 낮춤으로써 보다 효율성 있게 프로젝트를 관리할 수 있다.

일정 단축 기법은 다음과 같다.

크래싱(crashing)
:   
	-   <font color="#245bdb">자원과 비용을 더 투입하여 일정을 단축하는 기법</font>
    -   프로젝트 전체 기간 중 CP(critical path) 구간에 자원을 먼저 할당하여 프로젝트 전체 일정을 줄이는 기법으로 프로젝트 원가가 상승한다는 단점이 있음

Fast tracking
:   
	-   <font color="#245bdb">순차적으로 진행되는 활동 간 연관관계를 병렬로 작업함으로써 일정을 단축시키는 기법</font>
    -   프로젝트 리스크가 증가할 수 있으며 재작업을 해야 하는 단점이 있음

##### CCM 관리 버퍼

CCM에서 관리하는 버퍼는 다음과 같다.

![https://parati-in.medium.com/exploring-project-management-models-at-an-enterprise-level-9cd8b3a84dfe](https://miro.medium.com/v2/resize:fit:828/format:webp/1*8hU9kP_ZY6GChMbJ3FmbBw.png)

프로젝트 버퍼(project buffer)
:   
	-   critical chain 활동 상에서 확보한 버퍼를 chain 끝에 두어 관리
    -   안전영역, 모니터링 (버퍼 감시) 영역, 행동 영역(버퍼 통제)으로 나누어 관리

피딩 버퍼(feeding buffer)

:   
	-   non-critical chain에 대한 버퍼를 non-critical chain 끝에 두어 관리
    -   non-critical chain 작업 완료 지연에 따른 critical chain 차수 지연 방지

자원 버퍼(resource buffer)

:   -   경보장치 일종으로 critical chain 착수 전 해당 자원에게 수행 시기를 알려 줌

##### 추진 절차

```{mermaid}
flowchart LR

1[프로젝트 버퍼 설정]
2["합류 버퍼 및 <br>자원 버퍼 설정"]
3[CC 찾기]
4[CC 활용]
5["합류 버퍼 위치 <br>조정 및 관리"]

1-->2-->3-->4-->5
```

프로젝트 버퍼 설정
:   -   집중관리를 위해 critical path에 프로젝트 버퍼 설정

합류 버퍼 및 자원 버퍼 설정
:   
	-   합류하는 작업에 대한 합류 버퍼(feeding buffer)를 추가로 설정
    -   예약하는 자원에 대한 자원 버퍼(resource buffer) 설정

Critical Chain 찾기
:   -   multi tasking 단계드을찾아 작업 순서를 정하고 집중 관리할 대상을 명백히 함

Critical Chain 활용
:   -   multi tasking 작업들에 대해 경합이 일어나지 않토록 작업 순서를 정해 일정을 수립

합류 버퍼 위치 조정 및 관리
:  
	-   일정을 좌우하는 것은 critical chain으로 프로젝트 제약조건임
    -   제약조건은 보호되어야 하므로 합류버퍼 위치를 조정


##### 일정 수립 절차

+-----------------------------------+-----------------------------------------------------------------------------------------------------------------+
| 절차                              | 내용                                                                                                            |
+===================================+=================================================================================================================+
| 활동계획                          | 활동 및 연관관계를 정의하며, 필요 자원을 추정(CPM/PERT 방식과 동일)                                             |
+-----------------------------------+-----------------------------------------------------------------------------------------------------------------+
| 활동기간 추정                     | 작업자들이 추정한 활동기간에는 버퍼가 이미 포함되어 있으므로 개별 활동에 있는 버퍼를 추출하여 전체적으로 관리함 |
+-----------------------------------+-----------------------------------------------------------------------------------------------------------------+
| Critical Chain 결정               | 자원 이용가능성을 고려하여 제약 일정(critical chain) 결정                                                       |
+-----------------------------------+-----------------------------------------------------------------------------------------------------------------+
| 기간 버퍼 추가                    | 기간 버퍼(duration buffer) 추가                                                                                 |
+-----------------------------------+-----------------------------------------------------------------------------------------------------------------+
| 일정 수립                         | 버퍼가 결정되면 계획된 활동은 가장 빠른 시작, 종료일로 일정 수립                                                |
+-----------------------------------+-----------------------------------------------------------------------------------------------------------------+
| 버퍼 영역 분할                    | 버퍼를 안정영역(OK), 모니터링 영영(Watch), 행동영역(Act)으로 나누어 관리함                                      |
+-----------------------------------+-----------------------------------------------------------------------------------------------------------------+
| 프로젝트 일정 관리                | 개별 활동 완료일이 아닌 버퍼 관리(전체 버퍼 소진율)를 통해 프로젝트 일정을 관리함                               |
+-----------------------------------+-----------------------------------------------------------------------------------------------------------------+


### PERT vs. CPM

아래는 PERT와 CPM 비교 내용이다. 

![https://itwiki.kr/w/PERT/CPM](https://itwiki.kr/images/a/a3/PERT_CPM.png)

+----------------------+-----------------------------------------------------+-----------------------------------------------------------+
| 구분                 | PERT                                                | CPM                                                       |
+======================+=====================================================+===========================================================+
| 정의                 | **작업(일)** **순서**를 계획하기 위한 일정관리 기법 | **가장 오래 걸리는 경로**를 기준으로 일정을 관리하는 기법 |
+----------------------+-----------------------------------------------------+-----------------------------------------------------------+
| 개발시기             | 1958년                                              | 1957년                                                    |
+----------------------+-----------------------------------------------------+-----------------------------------------------------------+
| 개발주체             | **미해군**/로키드사                                 | **듀퐁사**/UNIVAC                                         |
+----------------------+-----------------------------------------------------+-----------------------------------------------------------+
| 모델                 | **확률적** 모델                                     | **확정적** 모델                                           |
+----------------------+-----------------------------------------------------+-----------------------------------------------------------+
| 주공정               | TL - TE = 0                                         | TF = FF = 0                                               |
+----------------------+-----------------------------------------------------+-----------------------------------------------------------+
| 관리대상             | 프로젝트 **시간** 측면                              | 프로젝트 **시간과 비용** 측면                             |
+----------------------+-----------------------------------------------------+-----------------------------------------------------------+
| 주요대상             | **경험이 없는** 프로젝트 계획 및 통제               | **경험이 있는** 프로젝트 계획 및 통제                     |
+----------------------+-----------------------------------------------------+-----------------------------------------------------------+
| 장점                 | -   경험적 교훈이 없는 경우                         | -   경험적 교훈이 있는 경우                               |
|                      |                                                     |                                                           |
|                      | -   불확실성이 높은 경우                            | -   불확실성이 적은 경우                                  |
+----------------------+-----------------------------------------------------+-----------------------------------------------------------+
| 단점                 | 확률론 이용에 따른 위험성                           | 잘 알려진 자원과 기술에만 적용 가능                       |
+----------------------+-----------------------------------------------------+-----------------------------------------------------------+
| 사례                 | 불확실한 대상인 우주 산업                           | 프로젝트 경험이 있는 건설 산업                            |
+----------------------+-----------------------------------------------------+-----------------------------------------------------------+

TE
:   -   전진계산방식, 각 단계가 가장 빨리 시작될 수 있는 시기로 최초시간이라 함

TL
:   -   후진계산방식, TE에서 계산한 시기에 맞도록 역산하여 각 단계가 가장 늦게 시작해도 좋은 시기로 최저시간이라 함

TF
:   -   FF + DF = 총여유 = LTF - ETF

FF
:   -   자유여유 = 후속 EST - EFT

DF
:   -   종속여유 = TF - FF

그 외
:   -   EST: 작업을 시작하는 가장 빠른 시간
    -   EFT: 작업을 종료하는 가장 빠른 시간
    -   LST: 작업을 시작하는 가장 늦은 시간
    -   LFT: 작업을 종료하는 가장 늦은 시간

#### PERT/CPM 전개 단계

	1.프로젝트에서 수행되어야 할 모든 활동 파악 및 정의
	2.활동 간 선행 관계 결정
	3.활동 간 선행 관계 네트워크도 작성
	4.각 단계에서 소요되는 시간 추정 (평균, 분산 계산)
	5.각 단계에서 가장 빠른 시간과 가장 늦은 시간 계산
	6.프로젝트 완료 시간과 critical path 결정
	7.정해진 기간 내 프로젝트 완성 확률 계산
	8.프로젝트 수행에 따른 정보 업데이트

### CPM vs. CCM

아래는 CPM과 CCM 비교 내용이다.

![https://edward-designer.com/web/critical-path-method-vs-critical-chain-method-for-pmp-exam/](https://edward-designer.com/web/wp-content/uploads/2016/03/ccm-vs-cpm.jpg)

| 구분      | CPM                                     | CCM                          |
|-|-|-|
| 착수일    | Earliest Start Date                     | Latest Start Date            |
| 관리 관점 | 진척률, EVM[^evm]                             | 전체 버퍼 소진율             |
| 버퍼      | 각 활동에 버퍼 반영                     | 버퍼를 모아서 관리           |
| 자원 제약 | -   활동 사이에 연관 관계 고려          | 자원 제약 자체를 계획에 반영 |
|           | -   일정 계획 후 Resource Leveling 수행 |                              |

[^evm]: EVM(Earned Value Management)은 프로젝트의 계획 대비 실제 성과를 비용 기준으로 측정하여, 일정 및 비용의 진척도를 파악하는 통합 관리 기법이다.

## 참고자료 {#sec-ref-0202}

### 프로젝트와 프로세스 차이

+---------------+-----------------------------------+-------------------------+-----------------------------+
| **순서**      | **특성**                          | **프로젝트**            | **프로세스**                |
+===============+===================================+=========================+=============================+
| 1             | 시작 및 종료                      | 명확한 시작과 끝        | 계속적인 진행               |
+---------------+-----------------------------------+-------------------------+-----------------------------+
| 2             | 시간/비용/품질 목표               | 목표를 달성하기 위해    | 지속적인 가치 제공          |
+---------------+-----------------------------------+-------------------------+-----------------------------+
| 3             | 범위 한정                         | 한정된 범위 내          | 범위가 상대적으로 더 넓음   |
+---------------+-----------------------------------+-------------------------+-----------------------------+
| 4             | 자원 활용성                       | 임시적인 자원 활용      | 영구적으로 할당된 자원 활용 |
+---------------+-----------------------------------+-------------------------+-----------------------------+
| 5             | 특성별 비교                       | 시간, 비용, 품질에 초점 | 지속적인 가치 제공에 초점   |
+---------------+-----------------------------------+-------------------------+-----------------------------+
| 6             | 결과와 목표 연결                  | 목표 달성으로 결과 산출 | 지속적인 결과 창출          |
+---------------+-----------------------------------+-------------------------+-----------------------------+
| 7             | 반복적 수행                       | 아님                    | 예                          |
+---------------+-----------------------------------+-------------------------+-----------------------------+
| 8             | 주요 목표 달성 위한 리소스 최적화 | 예                      | 아님                        |
+---------------+-----------------------------------+-------------------------+-----------------------------+
: 프로젝트와 프로세스 차이

---

**각주**

[^1]: 
