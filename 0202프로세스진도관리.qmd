---
title: "프로세스 진도관리"
format: html
---

::: {.callout-note title="프로세스와 프로젝트 차이" icon="false"}
+---------------+-----------------------------------+-------------------------+-----------------------------+
| **순서**      | **특성**                          | **프로젝트**            | **프로세스**                |
+===============+===================================+=========================+=============================+
| 1             | 시작 및 종료                      | 명확한 시작과 끝        | 계속적인 진행               |
+---------------+-----------------------------------+-------------------------+-----------------------------+
| 2             | 시간/비용/품질 목표               | 목표를 달성하기 위해    | 지속적인 가치 제공          |
+---------------+-----------------------------------+-------------------------+-----------------------------+
| 3             | 범위 한정                         | 한정된 범위 내          | 범위가 상대적으로 더 넓음   |
+---------------+-----------------------------------+-------------------------+-----------------------------+
| 4             | 자원 활용성                       | 임시적인 자원 활용      | 영구적으로 할당된 자원 활용 |
+---------------+-----------------------------------+-------------------------+-----------------------------+
| 5             | 특성별 비교                       | 시간, 비용, 품질에 초점 | 지속적인 가치 제공에 초점   |
+---------------+-----------------------------------+-------------------------+-----------------------------+
| 6             | 결과와 목표 연결                  | 목표 달성으로 결과 산출 | 지속적인 결과 창출          |
+---------------+-----------------------------------+-------------------------+-----------------------------+
| 7             | 반복적 수행                       | 아님                    | 예                          |
+---------------+-----------------------------------+-------------------------+-----------------------------+
| 8             | 주요 목표 달성 위한 리소스 최적화 | 예                      | 아님                        |
+---------------+-----------------------------------+-------------------------+-----------------------------+
:::

<br>

::: {.callout-tip icon=false title="기출: 97-1-7"}
:::

## 진도관리

**진도관리**는 생산계획에서 정해진 공정, 일정, 공스 등에 실제 진행 상황을 합치시키는 활동으로 모든 작업은 시간과 더불어 진전되므로특히 공장 작업 진도를 어느 공정까지 진행하였는지에 대한 "과정적 진도"와 얼마만큼 완성하였는지에 대한 "수량적 진도"로 구분할 수 있다.

생산순서 계획 및 진도관리는 방법은 다음과 같다.

Cycle Time Method
: - 제품 산출 주기를 일정하게 유지하는 방법

Goal Chasing Method
: - 각 부품 소비속도(소율비)을 일정하게 유지하는 방법

### 진도 차이 판정

대표적으로 컴업(Come Up) 방식, 숫자식 진도표, 과정적 진도표, 그래프 진도표, 연속생산에서의 사선식 진도표, 유동수 곡선 등이 있다.

```{mermaid}
flowchart TB
0[진도 차이 판정 방식]
11["컴업(Come Up)"]
12[숫자식 진도표]
13[과정적 진도표]
14[그래프 진도표]
15[사선식 진도표]
16[유동수 곡선]

0 --- 11 & 12 & 13 & 14 & 15 & 16
```

<br>

컴업(Come Up) 방식 - 개별 생산

: <center>![https://koreascience.kr/article/JAKO200951062613717.pdf](images/come_up.png)</center>

    -   작업표를 넣는 상자를 사용해서 진도를 통제하는 방식으로 주로 개별 상산에 적합

    -   진도 상자 구조는 작업표를 넣는 칸이 있고 각 칸에는 날짜가 표시

    -   작업표는 각 공정별로 작성하여 착수 일의 순서에 따라 정리하여 해당하는 날짜 칸에 넣어 두면 담당자가 매일 진도 상자를 조사해서 착수 일이 빠른 작업부터 우선적으로 처리해 나가는 방식

    -   어떤 작업 착수가 일정 계회보다 지연되는 경우 착수 일자가 지나면 작업표가 진도 상자에 남아 있기 때문에 쉽게 작업 진도 상황을 파악할 수 있는 장점


<br>


숫자식 진도표 - 연속 대량생산

: <center>![https://koreascience.kr/article/JAKO200951062613717.pdf](images/number_table.png)</center>

    -   날짜 눈금을 중심으로 하는 숫자식 진도표를 사용하여 진도를 통제하는 방식

    -   생산 품목별로 매일 생산 예정 수량과 실적을 기입할 수 있으므로 예정과 실적을 용이하게 비교 가능

    -   계속 생산이 진행되는 조립 공장이나 연속 대량 생산 공장에서 활용할 수 있는 진도 조사로 생산 수량을 기준으로 채허 진도 기록을 하는 숫자식 진도표와 같은 방법으로 예정과 실적 대조가 가능하여 편리하지만 실적 시기와 생산 수량에서 차이가 났을 때 어느 정도 지연이란 판단이 어려움(간트 차트를 통해 보완 가능)

    -   건설 공사 또는 복잡한 공장에서는 PERT Network를 응용

    -   연속생산에서는 누적생산 수가 진도 기준이 되므로 세부적인 진도 판정을 쉽게 식별할 수 있도록 용도를 달리한 "그래프식 지도표"가 유용


<br>


과정적 진도표 - 개별 생산 또는 소량 로트 생산

: <center>![https://koreascience.kr/article/JAKO200951062613717.pdf](images/process_table.png)</center>

    -   개별 생산 또는 소량 로트 생산에 있어 주로사용되며 공정별 진도 통제를 기준으로 하는 방식

    -   관리 부분에서 각 공정별 작업 전표를 만들어 그 전표가 생산으로부터 전달된 자료에 의해서 진도를 조사, 즉 실적 자료 관리로써 공정 검사를 위하여 재료 출고 전표, 작업 일보, 검사 보고서, 공정 진도표 등을 효과적으로 이용

    -   연속 생산 경우, 그래프 용지를 사용하여 예정표를 겸한 진도표를 작성해서 진도를 통제하는 방식으로 매주 또는 월 단위로 보통 매일을 기준으로 당일 생산 수량을 조사해서 진도료를 작성

    -   간편하고 식별이 용이하도록 생산 예정표 겸 실적 기록표를 이용


<br>

그래프식 진도표

: <center>![https://koreascience.kr/article/JAKO200951062613717.pdf](images/process_graph.png)</center>

    -   일련번호(누계수량)를 기준으로 생산 예정과 실적 차이를 그래프를 그려 진도를 통제하는 방식


<br>

사선식 진도표

: <center>![https://koreascience.kr/article/JAKO200951062613717.pdf](images/process_line.png)</center>

    -   대량 생산에 적합한 것으로 예정표를 겸한 진도표를 작성해서 진도를 통제하는 방식


<br>

유동수곡선도

: <center>![https://koreascience.kr/article/JAKO200951062613717.pdf](images/floating_point.png)</center>

    -   2개 곡선으로 그려지며, 진도통제나 재공품 통제에 사용

        -   P: 다음 공정으로 보낸 불출누계선
        -   Q: 앞공정에서 받아온 접수누계선

<br>

### 진도 차이 발생 원인

생산에 필요한 재료, 순서, 공수 및 일정에 대한 계획을 수립하고 적시에 작업 분배를 하더라도 상황 변화에 따라 작업 진도는 불가피하게 계획과 차이가 발생할 수 있다. 진도 차이가 발생하는 일반적인 원인은 다음과 같다.

```{mermaid}
flowchart LR
0[일반적인 진도 차이 원인]
11[무리한 수주]
12[부정확한 계획]
13[예외 사항 발생]
14[설계 시방 변경]
15[돌발 및 긴급 작업]
16[앞 공정 지연에 따른 영향]

0 --- 11 & 12 & 13 & 14 & 15 & 16
```

무리한 수주

:   -   생산 능력과 기존 부하를 고려하지 않고 고객으로부터 주문을 받는 경우 상식적으로 발생할 수 없는 상황이자만 지나친 의욕으로 의외로 자주 발생

부정확한 계획

:   -   계획 정확도는 관리 수준에 따라 달라지지만 작업 성질/특성 상 정확한 계획을 세우기 여려운 경우 발생

예외 사항 발생

:   -   기계 고장, 재료 지연, 불량 발생, 작업자 결근, 노동쟁의 또는 파업 등 예외 사항 발생에 의해 예정했던 여유시간 내 처리할 수 없는 경우, 이러한 사고는 사전에 예측하여 대책 세우기가 곤란

설계 시방 변경

:   -   고객으로부터 설계 시방 변경 요구에 따라 계획을 변경하게 되는 경우나 설계 착오에 의해 변경하는 경우, 진도 차이는 발생하나 일반적으로 납기 연장이 곤란

돌발 및 긴급 작업

:   -   사전에 생산 계획에 포함되어 있지 않던 작업이 사후 계획에 추가되는 경우, 주문 생산 경우 고객 관계로 돌발작업이나 긴급 작업과 같은 특수 상황 발생 가능

앞 공정 지연에 따른 영향

:   -   제품은 일련의 공정 순서에 따라 제조되므로 어느 하나 공정이 예정보다 지연되면 다음 공정은 시작 자체부터 지연 발생

### 진도 차이 대책

작업 진도 차이는 대부분 지연으로 나타나며 그 원인은 부하와 능력 조정, 생산 기간 연장, 생산 흐름 원화화로 볼 수 있다. 따라서 지연에 대해 효율적으로 대응하기 위해서는 다음과 같은 원칙으로 대책을 수립한다.

-   지연 대책을 일상 관리 절차에 따라 사무적으로 처리한다.
-   정기적으로 진도 회의를 진행한다.
-   근본적인 개선 대책을 수립하여 실시한다.
-   모든 관계자가 참여하고 협력할 수 있도록 동기를 부여한다.

능력 조정을 위해 작업자 증원, 잔업 및 휴일 특근과 같이 총 능력 공수를 증가할 수 있는 방안을 마련하고, 생산 흐름을 원활히 하기 위해 작업 능률과 가동률을 향상시켜야 하며 공정 간 능력 균형(line balance)을 향상시킨다.

<br>

::: {.callout-tip icon=false title="기출: 97-3-6, 100-3-1, 103-4-4, 115-1-5, 130-4-6"}
:::

## 네트워크 기법

**네트워크 기법**(Network, 화살도 arrow diagram, 활동 네트워크 activity network diagram)은 필요한 활동 선후관계를 네트워크로 표시하는 방식으로 간트차트 결점을 보완하기 위하여 개발되었다. 대표적인 기법으로 [-@sec-pert] (Program Evaluation & Review Technique)와 [-@sec-cpm] (Critical Path Method)이 있다.

<br>

:::{.callout-tip icon=false title="기출: 118-4-6"}
:::

### 주경로 {#sec-critical-path}


네트워크 기법에서 **주경로**(critical path)는 다음과 같이 정의한다.

```{mermaid}
  flowchart LR
  
  A --> B 
  A ==> C 
  B --> D
  C ==> D ==> E ==> H
  C --> F --> H
```

-   여유시간 값이 최소가 되는 단계를 연결한 경로
-   최소 여유 단계에서 활동이 계획 일정보다 늦어지면 최종 단계에서 프로젝트 완성이 그만큰 지연되므로 주경로 상의 공정을 **애로공정**이라고 함
-   네트워크 상 주공정은 굵은 색으로 표시하여 중점 관리 함

주공정 계산 방법
: 1. 작업 나열 및 의존 관계 정의
1. 작업 소요 시간 추정
1. 네트워크 다이어그램 작성
1. 전진계산(Forward pass) - 가장 빠른 완료 시간(Early Times, ES)
1. 후진계산(Backward pass) - 가장 늦은 완료 시간(Late Times, LS)
1. 여유 시간(부동소요, LS - ES) 계산
1. 크리티컬 패스 도출

:::{.callout-important icon=false title="주경로 계산"}
아래 그림에서 주 공정(Critical Path) 및 총소요일을 구하시오. (단, 그림의 Path 위의 숫자는 해당 공정의 소요일이다.)

<center>
![](images/118-4-6-01.png)
</center>

----

<center>
![](images/118-4-6-02.png)
</center>

각 공정 여유시간은 다음과 같다.

공정|0|1|2|3|4|5|6|7|8
-|-|-|-|-|-|-|-|-|-
여유시간|0|0|2|0|0|1|12|0|0

따라서 주공정은 여유시간이 최소가 되는 경로인 ⓪ → ① → ③ → ④ → ⑦ → ⑧이며, 총소요일은 20일이다.
:::

<br>

:::{.callout-tip icon=false title="기출: 124-3-2"}
:::

### 네트워크 구성

네트워크 기법은 네트워크 작성 방법에 따라 @sec-aoa와 @sec-aon 방식으로 나뉜다.

```{mermaid}
  flowchart TB
  subgraph AOA
    1((1)) -- A --> 3((3))
    2((2)) -- B --> 3((3)) -- D --> 4((4))
  end
  
  subgraph AON
    A((A)) & B((B)) --> C((C))
  end
```

단계(Event), 마디(Node)

:   -   작업 활동을 수행함에 있어 활동 개시 또는 완료되는 시점을 나타냄
    -   활동 개시 시점을 착수단계(beginning event), 활동 완료 시점을 완료 단계(ending event)라고 함

활동(Activity)

:   -   과업 수행 상 시간 및 자원(인력, 물자, 설비 등)이 소비되는 작업
    -   PERT 상 활동은 활동방향에 따라 실선 화살표로 표시
    -   활동에 따라 단계가 분리되거나 연결되기도 하는데 분리되는 경우 분리단계(burst event), 연결되는 경우 병합단계(merge event)라 함

결합합점(Node)

:   -   네크워크에서 마디(○)를 나타내는 것으로 AOA 방식에서는 단계(event)를 나타내며 AON 방식에서는 마디로 작업이나 활동을 나타냄

호(Arc)

:   -   네트워크에서 가지(→)로 활동을 나타내는 것으로 AOA 방식에서는 활동을, AON 방식에서는 활동 선후관계(단계)를 나타냄

#### AOA 네트워크 {#sec-aoa}

**AOA**(activity on arrow/arc)는 프로젝트에 필요한 활동을 화살표(arrow 또는 arc)로 표시하고 착수 완료 시점을 마디(node)로 표현하는 방법이다.

```{mermaid}
flowchart LR

1((시작)) -- "활동A<br>11" --> 2((1)) -- "활동B<br>13" -->  3((2)) --"..."--> 9((완료))

```

활동이 시작되는 시점이나 완료되는 시점을 단계(event)로 정의하고 이를 원(○)으로 된 마디로 표시한다. 화살표와 마디를 활동 간 선행 관계에 따라 연결함으로써 프로젝트를 네트워크로 나타낸다. 활동을 화살표 위에 나타내고 활동 시작과 완료를 마디로 표시하여 활동 선행 관계를 `마디 → 화살표 → 마디` 형태로 연결하여 표현한다. 단계를 나타내는 마디에서는 시간과 비용이 소요되지 않고 화살표 선상에 <u>활동명과 활동 소요시간</u>을 표시한다.

AOA 기법은 활동 간 연결점을 중시하므로 <font color = "blue">**사상 지향적**</font> 이라고 하고 선후 관계는 모든 선행활동이 완료되기 전까지는 사상이 일어날 수 없음을 뜻한다. 일반적으로 사상 번호는 좌측에서 우측으로 관행적으로 나열한다. 참고로, 사상은 활동이 하나 이상 완료되고 다른 활동이 시작되는 점을 뜻한다.

AOA 작성 시 원칙

:   -   마디 사이는 오직 화살표 한나만 연결
    -   공정 순서는 화살표 방향, 화살표 길이는 소요시간과 무관
    -   편의상 마디에 번호를 부여하되 중복 표시하지 않음
    -   첫마디 하나에서 시작하여 끝마디 하나에서 완료
    -   부득이 가상 활동(dummy activity) 표기 시 소요시간은 0, 화살표는 점선을 사용

주 공정 파악 절차

:   1.  활동 수행 소요 시간과 선행 관계를 고려하여 네트워크 구성
    2.  각 단계 시작 시간과 종료시간 계산
        -   단계 시작시간, SE - 다음 활동이 가장 빨리 시작될 수 있는 시간
        -   프로젝트 첫(시작) 단계: SE = 0
        -   두 번째 이후 단계: SE = max(직전 단계 SE, 직전 활동 시간)
        -   종료 단계: FL = SE, FL은 단계 종료 시간이며 프로젝트 최단 완료 시간을 지연시키지 않으면서 다음 활동을가장 늦게 완료할 수 있는 시간, 즉 다음 단계 SE 값 중 최소값
    3.  각 단계 여유시간 계산
        -   SL(a) = FL(a) - SE(a)
        -   SL은 여유시간, FL은 가장 늦은 완료 시간, SE는 가장 빠른 시작 시간
    4.  프로젝트 최단 완료 시간과 주공정 계산


:::{.callout-important icon=false title="주공정 계산"}
```{r}
#| echo: false
# #| tbl-colwidths: [10,90]

options(knitr.kable.NA = '')

tb <- data.frame(
  stringsAsFactors = FALSE,
       check.names = FALSE,
                활동 = c("A 제품전략 결정","B 입지선정",
                       "C 제조설비선정","D 배치결정","E 전기, 수도시설 설치","F 직원 모집","G 설비 설치",
                       "H 사무동 등 인테리어 공사","I 정보시스템 설치","J 종업원 교육"),
         `기대시간(일)` = c(1L, 7L, 3L, 4L, 11L, 4L, 5L, 2L, 4L, 2L),
              선행활동 = c("-","-","A","C","C","B, C",
                       "D","E, F","E, G","H, I")
)

knitr::kable(tb)
```

```{mermaid}
flowchart LR

0[시작] =="A<br>1"==> 1((1)) 
1 =="C<br>3"==> 3((3)) 
3--"D<br>4"-->4((4))
0[시작]--"B<br>7"--> 2((2))
3 =="E<br>11"==> 5((5))
3 -.-> 6
2 --"F<br>4"-->6((6))
4 --"G<br>5"--> 7((7))
5 --"H<br>2" --> 8((8))
6 -.-> 8
7 -.-> 9
5 =="I<br>4"==> 9((9))
9 =="J<br>2"==>10(완료)
8 -.-> 10
```

단순열거법에 따라 주공정은 `A-C-E-I-J`이고, 기대완료시간은 21일(1+3+11+4+2)이다.
:::

::: {.callout-note icon=false title="프로젝트 관리 목표"}
최적화를 위한 프로젝트 관리 목표로 제시되는 3가지 요소는 다음과 같다.

범위(scope)

:   -   프로젝트 결과물의 품질, 세부사항, 규모 측면에서 본 프로젝트 크기이다.

비용(cost)

:   -   프로젝트를 위해 지출되는 금액 뿐만아니라 프로젝트 완료에 필요한 각종 도구, 장비, 지원 등이 포함된다.

시간(time)

:   -   다른 요소와 균형을 맞춰 계획 단계 단축, 일정 조정, 마감일 연장 등이 필요하다.
:::

#### AON 네트워크 {#sec-aon}

**AON**(activity on node)는 활동을 마디로 표시하고 가지(화살표)는 활동 선후관계를 나타낸다. 이 기법은 <font color = "blue">**활동 지향적**</font>이다.

네트워크 구성 절차는 다음과 같다.

1.  프로젝트 수행에 필요한 모든 활동을 세로로 나열한다(먼저 착수해야 할 선행 작업부터 나열).
2.  나열된 각 활동 오른쪽에 직전 선행활동을 기록한다.
3.  화살표와 마디를 이용하여 네트워크도를 작성한다.
4.  필요하다면 주경로, 완료 일자를 추정한다.

<br>

:::{.callout-important icon=false title="기출: 100-3-1"}

```{mermaid}
flowchart LR
1[1]
2[2]
3[3]
4[4]
5[5]
6[6]

1 --3,4,5--> 2
2 --4,5,6-->3
1 --4,6,8-->3
2 --5,7,9-->4
4 --d1-->5
3 --3,6,9-->5
4 --7,8,15-->6
5 --6,8,16-->6
```

위 AON을 표로 정리하면 다음과 같다.

```{r}
#| echo: false
# #| tbl-colwidths: [10,90]

options(knitr.kable.NA = '')

tb <- data.frame(
  check.names = FALSE,
         선행단계 = c(1L, 1L, 2L, 2L, 3L, 4L, 5L),
         후행단계 = c(2L, 3L, 3L, 4L, 5L, 6L, 6L),
     `낙관치(a)` = c(3L, 4L, 4L, 5L, 3L, 7L, 6L),
      `정상치(m)` = c(4L, 6L, 5L, 7L, 6L, 8L, 8L),
      `비관치(b)` = c(5L, 8L, 6L, 9L, 9L, 15L, 16L),
         기대시간 = c(4L, 6L, 5L, 7L, 6L, 9L, 9L),
           분산 = c(0.11, 0.44, 0.11, 0.11, 1, 1.78, 2.78)
)

knitr::kable(tb)
```

$$
기대분산(t_e) = \frac{a + 4m + b}{6},  \quad 분산(\sigma^2) = (\frac{b-a}{6})^2
$$

단순열거법으로 주경로를 찾게되면 1 - 2 - 3 - 5 - 6이고 기대완료 시간은 24(4+5+6+9)일이다.

프로젝트를 24일만에 끝낼 확률을 구하기 위해서는 정규분포 z 값을 계산한다.

$$
z = \frac{TS-TE}{\sqrt{(\sum{(\sigma^2)}}} = \frac{24-24}{\sqrt{\sum{(0.11+0.11+1.00+2.78)}}} = 0
$$

따라서 z = 0 값을 표준정규분포에서 찾아보면 0.5를 값는다. 그러므로 해당 프로젝트를 24일만에 끝낼 확룰은 50%이다.
:::

::: {.callout-important icon=false title="라인 편성 효율"}
S제품을 조립 생산하는 K공장은 공정효율을 최적화하는 라인을 구축하여 수요에 대응하고자 한다. 이 제품은 다음 표와 같이 10개의 단위작업을 거쳐 1일 320개가 조립생산된다. 일일근무시간이 9시간이며, 오전 오후 10분씩 휴식시간과 40분의 점심시간이 주어질 때 다음 물음에 답하시오.

작업명 | 선행작업명 | 작업소요시간(분)
-|-|-
A | \- | 1.3
B | A | 0.5 
C | A | 1.2
D | B | 0.6
E | C,D | 0.3
F | A | 0.8
G | E | 1.3
H | F | 0.6
I | H | 0.8
J | I | 0.4

AON 방식을 사용하여 선후관계도를 작성하시오.

```{mermaid}
flowchart LR

A[A<br>1.3]
B[B<br>0.5]
C[C<br>1.2]
D[D<br>0.6]
E[E<br>0.3]
F[F<br>0.8]
G[G<br>1.3]
H[H<br>0.6]
I[I<br>0.8]
J[J<br>0.4]

A --> B
A ---> C
B --> D
C & D --> E
A ----> F
E --> G
F --> H
G --> H
H --> I
I --> J
```

----

생산목표를 달성하기 위한 최소공정수를 구하시오.

$$
사이클타임 = \frac{1일가용시간}{1일목표생산량} = \frac{9(시간) \times 60(분) - (20+40)(분)}{320(개)} = 1.5(분)
$$

목표 생산량을 달성하기 위해서는 공정당 1.5분 이내 완료되어야 한다. 따라서 총 과업시간을 사이클 타임으로 나누어 최소공정수를 계산한다.

$$
최소공정수 = \frac{과업시간합계}{사이클타임} = \frac{7.8}{1.5} = 5.6
$$

최소공정수는 6개이다.

----

최적할당을 수행하시오.

```{mermaid}
flowchart LR

A[A<br>1.3]
B[B<br>0.5]
C[C<br>1.2]
D[D<br>0.6]
E[E<br>0.3]
F[F<br>0.8]
G[G<br>1.3]
H[H<br>0.6]
I[I<br>0.8]
J[J<br>0.4]

subgraph 01
A
end
subgraph 02
B
D
end
subgraph 03
C
E
end
subgraph 04
G
end
subgraph 05
F
H
end
subgraph 06
I
J
end

A --> B
A ---> C
B --> D
C & D --> E
A ----> F
E --> G
F --> H
G --> H
H --> I
I --> J
```

----

라인편성효율(Line of balance efficiency)을 구하시오.

$$
\text{라인 밸런싱 효율(E)} = \frac{총과업시간}{최소공정수 \times 사이클타임} \times 100\% = \frac{7.8(분)}{6(개) \times 1.5분} \times 100\% = 86.7\%
$$

:::

:::{.callout-important icon=false title="네트워크 작성"}

| 활동 | 선행활동 | 소요시간(일) |
|------|----------|-------------|
| A    | -        | 3           |
| B    | A        | 6           |
| C    | B        | 12          |
| D    | C        | 2           |
| E    | -        | 6           |
| F    | E        | 10          |
| G    | F        | 5           |
| H    | D, G     | 1           |

----

AOA
: ![](images/124-3-2-01.png)

AON
: ![](images/124-3-2-02.png)

총완료시간은 A(3) → B(6) → C(12) → D(2) → H(1) = 24(일)이다.
:::


### 주요 기법


#### PERT {#sec-pert}

**PERT**(program evaluation and review technique, 프로그램 평기 검토 기법)은 1958년 미국 해군에서 Polaris missile 프로젝트 일정 계획 및 통제를 위한 관리 기법으로 개발되었으며, 시간을 가장 중요한 요소로 통제하는 프로젝트 관리 방법이다. 연구 개발 프로세스에서 프로젝트 진행 상황을 통계 방법을 활용하여 파악하고 이를 통해 일정 계획 및 통제 수단으로 활용되었다. 과거 경험이 없는 불확실한 대상이나 여러 가지 유형의 프로그램 연구 개발에 적합하다.

<br>

##### 장단점

+-----------------------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 장점                                                                                                                                          | 단점                                                                                                                                                                                                                          |
+===============================================================================================================================================+===============================================================================================================================================================================================================================+
| 프로젝트 완료 시간을 예측하고 전체 프로세스를 관리할 수 있다.                                                                                 | 주관적인 판단에 의해 결정된 활동 예상 시간을 바탕으로 프로젝트 완료 예상 시점 혹은 기간을 결정하기 때문에 판단하는 사람의 주관적인 요소에 따라 예측 결과가 크게 달라질 수 있다.                                               |
+-----------------------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 확률적으로 계산한 것이기 때문에 예측한 시간에 비해 더 빨리 프로젝트를 완료할 수도 있다.                                                       | 활동에 소요되는 예상 시간이 적절하게 예측되었다 하더라도 PERT에서는 소요시간을 확률적으로 고려하게 되는데 실제 확률분포와 베타분포의 correlation이 낮으면 낮을수록 PERT에서 예측한 결과와 실제 소요 시간 오차는 커질 수 있다. |
+-----------------------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 주공정이 아니면서 여유시간이 있는 활동을 완료한 이후 잉여 시간이나 자원을 주공정에 투입함으로써 실제 프로젝트 완료 기간을 단축시킬 수도 있다. | 다른 프로젝트 진행 경로에 존재하는 활동이 연기될 경우 이에 따라 주공정 자체가 변화하게 되는데, 이런 상황이 발생할 경우 PERT에서 예측한 소요 시간은 실제 예측 시간보다 더 짧아진다는 단점이 있다.                              |
+-----------------------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

<br>

##### 네트워크 구성 절차

1.  프로젝트 수행 시 필수적인 과정과 활동 선정
2.  각각 관리점과 활동 순서를 결정
3.  결정된 순서를 고려하여 네트워크 개략도 작성
4.  각 과정에 소요되는 시간 예측
5.  소요시간 정보를고려하여 주공정(critical path) 결정
6.  프로젝트 진행에 따라 PERT Chart 업데이트

프로젝트 수행 시 필수적인 과정과 활동 선정

:   -   활동은 프로젝트를 완수하는데 필요한 업무이고 주요 관리점은 활동 시작과 끝 지점으로 정의된다.

각각 관리점과 활동 순서를 결정

:   -   활동과 관리점 순서를 결정한다.

결정된 순서를 고려하여 네트워크 개략도 작성

:   -   활동을 정해진 순서에 따라 수직적, 병렬적으로 배치하여 활동 간 연관성과 순서를 나타내는 망 조직 선도(network diagram, AOA 또는 AON) 작성한다.

각 과정에 소요되는 시간 예측

:   -   시간적 불확실성을 감소시키기 위해 세 종류 시간을 정의하고 이를 통해 예상 시간을 계산한다.
        -   낙관적 시간, optimistic time(a), 활동을 완료할 수 있는 최소 예상시간
        -   평균 시간, most likely time(b), 가장 높은 확률을 갖는 활동 완료 시간
        -   비관적 시간, pessimistic time(c), 활동을 완료하는데 소요되 수 있는 최장 시간
        -   낙관적 시간과 비관적 시간은 평균 시간에서 $\pm3\sigma$만큼 떨어진 위치로 설정
    -   위 3가지 시간을 활용하여 평균 소요 시간($T_E$) 및 분산산을 확률적으로 예측(베타 분포를 따른다고 가정)
        -   $T_E = mean \ value \ \frac{a + 4b + c}{6}, \quad \sigma^2=(\frac{c-a}{6})^2$

소요시간 정보를 고려하여 주공정(critical path) 결정

:   -   위 단계에서 예측한 예상소요시간을 고려하여 프로젝트를 가장 짧은 시간에 완료할 수 있는 주공정 결정
    -   주공정은 각 활동에 소요되는 시간을 연속적으로 더해 프로젝트를 진행하는데 있어 가장 긴 경로로 결정
    -   주공정이 명확하지 않을 경우 다음 네가지 요소를 추가적으로 고려
        -   Earliest Start Time(ES), 선행 활동이 먼저 완수되었을 때 해당 활동을시작할 수 있는 가장 빠른 시점
        -   Earliest Finish Time(EF), 가장 빨리 해당 활동을 완수할 수 있는 시점으로 `ES + 활동 소요 시간`으로 계산
        -   Latest Start Time(LS), 프로젝트 전체 완수 시간에 영향은 없지만 선행 활동에서 여유시간이 발생하지 않음에 따라 해당 활동을 시작할수 있는 가장 늦은 시점
        -   Latest Finish Time(LF), 가장 늦게 해당 확동을 완수할 수 있는 시점으로 `LS + 활동 소요 시간`으로 계산

프로젝트 진행에 따라 PERT Chart 업데이트

:   -   주 공정이 결정되면 프로젝트 완료 일자가 결정되고 실제 프로젝트를 진행
    -   예상 소요 시간을 실제 소요 시간으로 업데이트하고 추가적으로 요구되는 활용 혹은 제외 가능한 활동 등을 고려하여 PERT Chart를 새로운 상황에 맞게 지속적으로 업데이트 수행

<br>

##### PERT/COST

PERT/COST는 프로젝트가 최소비용으로 완료될 수 있도록 일정 계획을 수립하는 기법이다.

프로젝트 비용은 직접 비용과 간접 비용으로 구성된다. 직접 비용은 각 활동 완료에 소요되는 비용을 뜻하며, 간접 비용은 프로젝트 완료 시간이 길어짐에 따라 증가하는 비용을 뜻한다. 예를 들면 이자, 설비 사용료, 보험료와 같은 간접 경비가 이에 속한다.

일반적으로 프로젝트 기간이 길어지면 직접 비용 감소하지만 간접비용은 증가하게 된다. 반대로 프로젝트 일정을 단축하게 되면 그 만큼 직접 비용이 발생하게 된다.

분석 절차는 다음과 같다.

1.  전체 프로젝트를 단계 별로 분리한 작업분해도(WBS) 작성
2.  기능적으로 독립된 Work Package 단위가지 세분화
3.  Work Package가 포함된 각 활동을 토대로 PERT 계획공정도 작성
4.  각 공정 추정 시간치($t_e$)와 단계 시간($T_e, \ TL, \ S$)을 구하여 프로젝트 일정 계획을 수립
5.  각 활동 일정 계획이 수립되면 비용 견적과 예산화(budgeting) 수행

<br>

#### CPM {#sec-cpm}

**CPM**(critical path method)은 프로젝트에 있어 각 활동 시작과 종료 시점을 나타내는 방법으로 프로젝트를 완수하는데 필요한 활동과 각 활동 완수 시 소요되는 시간을 모두 알고 있는 상태에서 진행 순서를 최적으로 도출해 내는 관리 기법이다.

1957년 미국 Remington-Rand 사 J.E. Kelly와 Du Pont 사 M.R. Walker에 의해 개발된 기법으로 Dupont 사에서 화공 플랜트 장비를 위해 가동 중단 시간과 정비, 정비 후 재가동 시간을 효율적으로 관리하기 위해 개발한 프로젝트 관리 기법이다. [-@sec-pert]가 주로 불확실성 하에서 프로젝트를 관리하는 기법인데 반해 CPM은 과거 경험했던 공법, 기술, 또는 상업적 프로젝트에 응용되는 계획 관리기술이다.

<br>

##### 장단점

+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 장점                                                                                                                                                                                                         | 단점                                                                                                                                                                                                                              |
+==============================================================================================================================================================================================================+===================================================================================================================================================================================================================================+
| 프로젝트 진행상황을 시각적으로 표현할 수 있으며 프로젝트를 완수하는데 필요한 시간을 비교적 정확하게 예측할 수 있다. 또한 어떤 활동이 프로젝트 진행 일정 및 다른 활동 완수에 영향을 미치는지 분석이 가능하다. | 기법은 복잡하지만 변화 가능성이 적은 프로젝트를 수행할 때 프로젝트 완수 시간 불확실성을 해소하기 위해 개발되었기 때문에 프로젝트 수행 방법이나 과정이 달라지기 쉬운 경우에는 CPM 기법을 통한 예측 활용성은 제한적일 수 밖에 없다. |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

<br>

##### 진행 순서

1.  개별 활동 명시
2.  각 활동 순서 결정
3.  결정된 순서를 고려하여 네트워크 개략도 작성
4.  각 과정에 소요되는 시간 예측
5.  소요 시간 정보를 고려하여 주공정(critical path) 결정
    -   활동 네트워크 상 가장 오래 걸리는 공정 경로
6.  프로젝트 진행에 따라 CPM diagram 업데이트

<br>

:::{.callout-important icon=false title="네트워크 기법"}

| 활동 | 선행 활동      | 후행 활동      | 정상 시간 | 정상 비용 | 단축 시간 | 단축 시간 감안 총비용 |
|------|---------------|---------------|-----------|-----------|------------|----------------------|
| A    | -             | B, C          | 4일       | 500만원   | 2일       | 1000만원            |
| B    | A             | C, D          | 3일       | 600만원   | 2일       | 800만원             |
| C    | A, B          | D, E          | 5일       | 700만원   | 3일       | 1400만원            |
| D    | B, C          | E             | 2일       | 300만원   | 1일       | 600만원             |
| E    | D             | -             | 1일       | 300만원   | -          | -                   |

----

네트워크는 다음과 같이 작성할 수 있다.

```{mermaid}
graph LR
    A(("A (4일)")) --> B(("B (3일)"))
    A --> C(("C (5일)"))
    B --> C
    B --> D(("D (2일)"))
    C --> D
    C --> E(("E (1일)"))
    D --> E
```

정상 완료 시간 기준으로 비용을 계산하면 다음과 같다.


정상 완료 시간: 4일
: - Critical Path: A → B → C → D → E

정상 비용: 2400만 원
: - 500 + 600 + 700 + 300 + 300

프로젝트 완료 시간을 1일 단축할 경우 계산하면 다음과 같다.

프로젝트 완료 시간을 단축하려면 **Critical Path(A → B → C → D → E)** 상의 활동 중에서 **단축 가능한 활동**을 선택해야 한다. 각 활동의 단축 가능 시간과 비용은 아래와 같다.

| 활동 | 단축 시간 | 단축 시간 감안 총비용 | 단축 비용 증가분 (1일당) |
|------|-----------|----------------------|--------------------------|
| A    | 2일       | 1000만원            | (1000 - 500) / (4-2) = 250만원 |
| B    | 2일       | 800만원             | (800 - 600) / (3-2) = 200만원 |
| C    | 3일       | 1400만원            | (1400 - 700) / (5-3) = 3503만원 |
| D    | 1일       | 600만원             | (600 - 300) / 1 = 300만원 |

단축 전략
: - **B 활동 단축**: 단축 비용 증가분이 가장 낮은 B 활동을 1일 단축한다.

결과 계산
: 1. **총 프로젝트 소요 시간**  
   기존 완료 시간 15일 → 단축 후 14일
2. **총 프로젝트 비용**  
   기존 비용 2400만 원 + B 활동 단축 비용 200만 원 = 2600만원

결과
: - **총 프로젝트 소요 시간**: 14일  
- **총 프로젝트 비용**: 2600만 원  
:::

<br>

:::{.callout-tip icon=false title="기출: 115-1-3"}
:::

#### CCM {#sec-ccm}

**CCM**(critical chain method) 또는 CCPM (critical chain project management)은 TOC 제약 이론을 기반으로 한 프로젝트 관리 기법이다.

제품 Life cycle이 날로 짧아지고 고객 요구가 다양해 짐에 따라 신제품 개발, 신규 사업 추진 등 급변하는 사업 환경에 대응하기 위해서 프로젝트성 업무가 급증하는 추세이다. 프로젝트는 과제 특성상 완료 시간이 불확실하여 계획 단계에서 준수 확룔을 높이기 위해 안전 여유를 감안하여 예상 소요 시간을 길게 수립한다. 프로제특 관리자는 제한된 자원, 즉 인력, 비용, 시간 등으로 여러 프로젝트를 동시에 관리하여 프로젝트를 기한 내 원활히 수행하기 위한 효과적인 관리기법이 필요하게 되었다.

::: {.callout-note icon="false" title="예상 기간 장기화 문제 원인"}

안전여유

:   납기를 어기지 않기 위해 실제 예상일정보다 여유 시간을 추가하여 계획 수립

자기방어

:   작업을 일찍 완료하게 되면 다른 작업을 할당받게 되어 작업 완료를 숨기는 현상상

학생증후군

:   과제 또는 시험 기간이 충분하더라도 마감 시간에 맞춰 시작하려는 현상

파킨슨 법칙

:   과제가 일찍 완료될 수 있더라도 마감일자까지 과제를 진행함

Multi-tasking

:   여러 작업을 동시에 진행하는 상황에서 단일 작업을 순차적으로 진행하는 것보다 시간 소요가 더 많이 발생하는 경우

후행공정

:   후속 작업이 준비되어 있지 않으면 준비 일정 단축이 어려움

자원병목

:   희소 자원 가용성 문제로 일정 지연 발생 가능
:::

CCM 목표는 프로젝트 기간 단축과 예상 기간 준수이다. 작업 기반 버퍼로 네트워크 경로 상 개별 활동 일정을 미시적으로 관리하는 대시 모든 작업 체인을 따라 자원 가용성 및 종속성을 고려하고 보호하기 위해 체인에 있는 전반적인 모든 활동 버퍼를 관리하는데 중점을 둔다. 암시적인 개별 작업 버퍼를 제거하고 일정 위험을 낮춤으로써 보다 효율성 있게 프로젝트를 관리할 수 있다.

일정 단축 기법은 다음과 같다.

크래싱(crashing)

:   -   자원과 비용을 더 투입하여 일정을 단축하는 기법
    -   프로젝트 전체 기간 중 CP(critical path) 구간에 자원을 먼저 할당하여 프로젝트 전체 일정을 줄이는 기법으로 프로젝트 원가가 상승한다는 단점이 있음

Fast tracking

:   -   순차적으로 진행되는 활동 간 연관관계를 병렬로 작업함으로써 일정을 단축시키는 기법
    -   프로젝트 리스크가 증가살 수 있으며 재작업을 해야 하는 단점이 있음음

<br>

##### CCM 관리 버퍼

CCM에서 관리하는 버퍼는 다음과 같다.

![https://parati-in.medium.com/exploring-project-management-models-at-an-enterprise-level-9cd8b3a84dfe](https://miro.medium.com/v2/resize:fit:828/format:webp/1*8hU9kP_ZY6GChMbJ3FmbBw.png)

프로젝트 버퍼(project buffer)

:   -   critical chain 활동 상에서 확보한 버퍼를 chain chain 끝에 두어 관리
    -   안전영역, 모니터링 (버퍼 감시) 영역, 행동 영역(버퍼 통제)으로 나누어 관리

피딩 버퍼(feeding buffer)

:   -   non-critical chain에 대한 버퍼를 non-critical chain 끝에 두어 관리
    -   non-critical chain 작업 완료 지연에 따른 critical chain 차수 지연 방지

자원 버퍼(resource buffer)

:   -   경보장치 일종으로 critical chain 착수 전 해당 자원에게 수행 시기를 알려 줌

<br>

##### 추진 절차

```{mermaid}
flowchart LR

1[프로젝트 버퍼 설정]
2["합류 버퍼 및 <br>자원 버퍼 설정"]
3[CC 찾기]
4[CC 활용]
5["합류 버퍼 위치 <br>조정 및 관리"]

1-->2-->3-->4-->5
```

프로젝트 버퍼 설정

:   -   집중관리를 위해 critical path에 프로젝트 버퍼 설정

합류 버퍼 및 자원 버퍼 설정

:   -   합류하는 작업에 대한 합류 버퍼(feeding buffer)를 추가로 설정
    -   예약하는 자원에 대한 자원 버퍼(resource buffer) 설정

Critical Chain 찾기

:   -   multi tasking 단계드을찾아 작업 순서를 정하고 집중 관리할 대상을 명백히 함

Critical Chain 활용

:   -   multi tasking 작업들에 대해 경합이 일어나지 않토록 작업 순서를 정해 일정을 수립

합류 버퍼 위치 조정 및 관리

:   -   일정을 좌우하는 것은 critical chain으로 프로젝트 제약조건임
    -   제약조건은 보호되어야 하므로 합류버퍼 위치를 조정

<br>

##### 일정 수립 절차

+-----------------------------------+-----------------------------------------------------------------------------------------------------------------+
| 절차                              | 내용                                                                                                            |
+===================================+=================================================================================================================+
| 활동계획                          | 활동 및 연관관계를 정의하며, 필요 자원을 추정(CPM/PERT 방식과 동일)                                             |
+-----------------------------------+-----------------------------------------------------------------------------------------------------------------+
| 활동기간 추정                     | 작업자들이 추정한 활동기간에는 버퍼가 이미 포함되어 있으므로 개별 활동에 있는 버퍼를 추출하여 전체적으로 관리함 |
+-----------------------------------+-----------------------------------------------------------------------------------------------------------------+
| Critical Chain 결정               | 자원 이용가능성을 고려하여 제약 일정(critical chain) 결정                                                       |
+-----------------------------------+-----------------------------------------------------------------------------------------------------------------+
| 기간 버퍼 추가                    | 기간 버퍼(duration buffer) 추가                                                                                 |
+-----------------------------------+-----------------------------------------------------------------------------------------------------------------+
| 일정 수립                         | 버퍼가 결정되면 계획된 활동은 가장 빠른 시작, 종료일로 일정 수립                                                |
+-----------------------------------+-----------------------------------------------------------------------------------------------------------------+
| 버퍼 영역 분할                    | 버퍼를 안정영역(OK), 모니터링 영영(Watch), 행동영역(Act)으로 나누어 관리함                                      |
+-----------------------------------+-----------------------------------------------------------------------------------------------------------------+
| 프로젝트 일정 관리                | 개별 활동 완료일이 아닌 버퍼 관리(전체 버퍼 소진율)를 통해 프로젝트 일정을 관리함                               |
+-----------------------------------+-----------------------------------------------------------------------------------------------------------------+

<br>

### PERT vs. CPM

<center>
![https://itwiki.kr/w/PERT/CPM](https://itwiki.kr/images/a/a3/PERT_CPM.png)
</center>

+----------------------+-----------------------------------------------------+-----------------------------------------------------------+
| 구분                 | PERT                                                | CPM                                                       |
+======================+=====================================================+===========================================================+
| 정의                 | **작업(일)** **순서**를 계획하기 위한 일정관리 기법 | **가장 오래 걸리는 경로**를 기준으로 일정을 관리하는 기법 |
+----------------------+-----------------------------------------------------+-----------------------------------------------------------+
| 개발시기             | 1958년                                              | 1957년                                                    |
+----------------------+-----------------------------------------------------+-----------------------------------------------------------+
| 개발주체             | **미해군**/로키드사                                 | **듀퐁사**/UNIVAC                                         |
+----------------------+-----------------------------------------------------+-----------------------------------------------------------+
| 모델                 | **확률적** 모델                                     | **확정적** 모델                                           |
+----------------------+-----------------------------------------------------+-----------------------------------------------------------+
| 주공정               | TL - TE = 0                                         | TF = FF = 0                                               |
+----------------------+-----------------------------------------------------+-----------------------------------------------------------+
| 관리대상             | 프로젝트 **시간** 측면                              | 프로젝트 **시간과 비용** 측면                             |
+----------------------+-----------------------------------------------------+-----------------------------------------------------------+
| 주요대상             | **경험이 없는** 프로젝트 계획 및 통제               | **경험이 있는** 프로젝트 계획 및 통제                     |
+----------------------+-----------------------------------------------------+-----------------------------------------------------------+
| 장점                 | -   경험적 교훈이 없는 경우                         | -   경험적 교훈이 있는 경우                               |
|                      |                                                     |                                                           |
|                      | -   불확실성이 높은 경우                            | -   불확실성이 적은 경우                                  |
+----------------------+-----------------------------------------------------+-----------------------------------------------------------+
| 단점                 | 확률론 이용에 따른 위험성                           | 잘 알려진 자원과 기술에만 적용 가능                       |
+----------------------+-----------------------------------------------------+-----------------------------------------------------------+
| 사례                 | 불확실한 대상인 우주 산업                           | 프로젝트 경험이 있는 건설 산업                            |
+----------------------+-----------------------------------------------------+-----------------------------------------------------------+

TE

:   -   전진계산방식, 각 단계가 가장 빨리 시작될 수 있는 시기로 최초시간이라 함

TL

:   -   후진계산방식, TE에서 계산한 시기에 맞도록 역산하여 각 단계가 가장 늦게 시작해도 좋은 시기로 최저시간이라 함

TF

:   -   FF + DF = 총여유 = LTF - ETF

FF

:   -   자유여유 = 후속 EST - EFT

DF

:   -   종속여유 = TF - FF

그 외

:   -   EST: 작업을 시작하는 가장 빠른 시간
    -   EFT: 작업을 종료하는 가장 빠른 시간
    -   LST: 작업을 시작하는 가장 늦은 시간
    -   LFT: 작업을 종료하는 가장 늦은 시간

<br>

#### PERT/CPM 전개 단계

```{mermaid}
flowchart TB
0[프로젝트에서 수행되어야 할 모든 활동 파악 및 정의]
1[활동 간 선행 관계 결정]
2[활동 간 선행 관계 네트워크도 작성]
3["각 단계에서 소요되는 시간 추정 (평균, 분산 계산)"]
4[각 단계에서 가장 빠른 시간과 가장 늦은 시간 계산]
5[프로젝트 완료 시간과 critical path 결정]
6[정해진 기간 내 프로젝트 완성 확률 계산]
7[프로젝트 수행에 따른 정보 업데이트]

0 --> 1 --> 2 --> 3 --> 4 --> 5 --> 6 --> 7
```

<br>

### CPM vs. CCM

![https://edward-designer.com/web/critical-path-method-vs-critical-chain-method-for-pmp-exam/](https://edward-designer.com/web/wp-content/uploads/2016/03/ccm-vs-cpm.jpg)

+-----------+-----------------------------------------+------------------------------+
| 구분      | CPM                                     | CCM                          |
+===========+=========================================+==============================+
| 착수일    | Earliest Start Date                     | Latest Start Date            |
+-----------+-----------------------------------------+------------------------------+
| 관리 관점 | 진척률, EVM                             | 전체 버퍼 소진율             |
+-----------+-----------------------------------------+------------------------------+
| 버퍼      | 각 활동에 버퍼 반영                     | 버퍼를 모아서 관리           |
+-----------+-----------------------------------------+------------------------------+
| 자원 제약 | -   활동 사이에 연관 관계 고려          | 자원 제약 자체를 계획에 반영 |
|           |                                         |                              |
|           | -   일정 계획 후 Resource Leveling 수행 |                              |
+-----------+-----------------------------------------+------------------------------+


